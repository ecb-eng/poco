#!/usr/bin/env python
"""
Copyright 2017 Pedro Santos <pedrosans@gmail.com>

This program is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program.  If not, see <https://www.gnu.org/licenses/>.
"""

import argparse, vimwn, subprocess, logging, os, sys
from vimwn.controller import Controller
from vimwn.service import NavigatorService
from vimwn.service import RemoteInterface

parser = argparse.ArgumentParser()
parser.add_argument("--start",
		action="store_true",
		help="Starts vimwn as a service")
parser.add_argument("--stop",
		action="store_true",
		help="Stops the running vimwn service if any")
parser.add_argument("--status",
		action="store_true",
		help="Show the status of vimwn service")
args = parser.parse_args()
controller = Controller()

if args.start:
	service = NavigatorService()
	print "Daemonizing the process, run \"vimwn --status\" to verify the daemon process status"
	service.daemonize()
	logging.debug("Service were daemonized, running as pid: " + str(os.getpid()))
	controller.start()
	logging.debug("Ending daemonized service running as pid: " + str(os.getpid()))
elif args.stop:
	remote = RemoteInterface()
	remote.stop_running_instance()
elif args.status:
	remote = RemoteInterface()
	print remote.get_status()
else:
	controller.open()
